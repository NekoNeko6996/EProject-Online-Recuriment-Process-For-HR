<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.WebsiteName</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">

    <link href="@Url.Content("~/Content/Css/Root.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/Css/Button.css")" rel="stylesheet" />

    @* font *@
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jaro:opsz@6..72&display=swap" rel="stylesheet">

    <style>
        @@media screen and (max-width: 991px) {
            #top-nav-dropdown {
                padding-top: 10px;
            }
        }
    </style>

    <style>
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5); /* Làm mờ nền */
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1050;
        }

        .spinner-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .spinner-border {
            width: 4rem;
            height: 4rem;
        }

        .loading-text {
            margin-top: 10px;
            color: white;
            font-size: 1.2rem;
            font-weight: bold;
        }

        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh; /* Giữ tối thiểu 100% chiều cao */
        }

        .container-fluid {
            flex: 1; /* Đẩy footer xuống */
        }

        .footer {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            background: white;
            text-align: center;
            padding: 10px 0;
            transition: bottom 0.3s ease-in-out; /* Hiệu ứng trượt */
        }

            .footer p {
                margin: 0;
            }
    </style>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        /* Đảm bảo layout luôn full màn hình */
        html, body {
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .content-wrapper {
            flex: 1;
            padding: 20px 0;
        }

        footer {
            position: sticky;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>

@RenderSection("Scripts", required: false)
<body>
    <nav class="navbar navbar-expand-lg navbar-light sticky-lg-top" style="border-bottom: 1px solid #AAA; background-color: white;">
        <div class="container-fluid">
            <h3 class="m-0">
                <a class="navbar-brand" href="@Url.Action((string)ViewBag.Page ?? "Index", (string)ViewBag.Controller ?? "Home")" style="font-size: 25px; height: 40px;">
                    <img src="@Url.Content("~/Content/Resources/nav-logo-web-workspace-blue.png")" alt="Alternate Text" class="m-0" style="height: 40px" />
                </a>
            </h3>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse w-100" id="navbarNav">
                @*right nav*@
                <ul class="navbar-nav ms-auto">
                    <li><a class="nav-link" href="/Default/Help">Help</a></li>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item">@Html.ActionLink("Department", "Index", "Department", null, new { @class = "nav-link" })</li>
                        <li class="nav-item">@Html.ActionLink("Vacancies", "Index", "Vacancy", null, new { @class = "nav-link" })</li>
                        <li class="nav-item">@Html.ActionLink("Applicants", "Index", "Applicant", null, new { @class = "nav-link" })</li>
                        <li class="nav-item">@Html.ActionLink("Schedule", "Index", "VacancySchedule", null, new { @class = "nav-link" })</li>
                        <li>
                            <div class="dropdown" id="top-nav-dropdown">
                                <a href="#" role="button" id="dropdownMenuLink"
                                   class="d-flex align-items-center text-decoration-none dropdown-toggle rounded"
                                   data-bs-toggle="dropdown" aria-expanded="false" style="border: 1px solid #BBB; padding: 2px 5px 2px 5px">
                                    <span class="bg-primary p-1 rounded me-1 text-white" style="font-size: 12px">
                                        <strong>@ViewBag.CurrentUserRole.ToUpper()</strong>
                                    </span>
                                    <span class="fw-bold">
                                        @if (ViewBag.CurrentUser != null && !string.IsNullOrWhiteSpace(ViewBag.CurrentUser.FirstName))
                                        {
                                            @String.Concat(ViewBag.CurrentUser.FirstName, " ", ViewBag.CurrentUser.LastName)
                                        }
                                        else
                                        {
                                            @("Default User Name")
                                        }
                                    </span>
                                    <img src="@Url.Content($"{ViewBag.CurrentUser.UserProfile.AvatarUrl}")" alt="User Avatar" class="rounded-circle ms-2" width="31" height="31">
                                </a>

                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuLink">
                                    <li class="d-flex flex-row align-items-center">
                                        <a class="dropdown-item" href="@Url.Action("ProfileSetting", "Account")">
                                            <i class="fa-solid fa-gear"></i>
                                            <span class="m-1"></span>Setting
                                        </a>
                                    </li>
                                    <li>
                                        <hr class="dropdown-divider">
                                    </li>
                                    <li>
                                        @using (Html.BeginForm("Logout", "Account", FormMethod.Post, new { @class = "d-inline" }))
                                        {
                                            @Html.AntiForgeryToken();
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="fa-solid fa-right-from-bracket"></i>
                                                <span class="m-1"></span>Logout
                                            </button>
                                        }
                                    </li>
                                </ul>
                            </div>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Login", "Account")">Login</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>

    @* alert *@
    <div class="modal fade" id="customAlert" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="alertTitle">Thông báo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="alertMessage">
                    <ul></ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="alertConfirm">OK</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Nội dung chính -->
    <div class="container content-wrapper pb-5">
        @RenderBody()
        <footer class="footer">
            <div class="container">
                <p>&copy; @DateTime.Now.Year - HR System. All Rights Reserved.</p>
            </div>
        </footer>
    </div>

    <!-- Scripts -->
    <script>
        function showAlert(title, message, confirmBtnText = "OK", onConfirm = null) {
            document.getElementById('alertTitle').textContent = title;

            document.getElementById('alertMessage').innerHTML = "";
            for (let i = 0; i < message.length; i++) {
                document.getElementById('alertMessage').innerHTML += `<li>${message[i]}</li>`;
            }

            const confirmButton = document.getElementById('alertConfirm');
            confirmButton.textContent = confirmBtnText;

            confirmButton.replaceWith(confirmButton.cloneNode(true));
            const newConfirmButton = document.getElementById('alertConfirm');

            if (onConfirm) {
                newConfirmButton.addEventListener('click', () => {
                    onConfirm();
                    bootstrap.Modal.getInstance(document.getElementById('customAlert')).hide();
                });
            } else {
                newConfirmButton.addEventListener('click', () => {
                    bootstrap.Modal.getInstance(document.getElementById('customAlert')).hide();
                });
            }

            const alertModal = new bootstrap.Modal(document.getElementById('customAlert'));
            alertModal.show();
        }
    </script>

    <!-- Loading Spinner -->
    <div id="loadingSpinner" style="display: none;">
        <div class="loading-overlay">
            <div class="spinner-container">
                <div class="spinner-border text-primary" role="status"></div>
                <p class="loading-text">Loading, please wait...</p>
            </div>
        </div>
    </div>
</body>
</html>
