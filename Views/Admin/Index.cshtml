@{
    ViewBag.Title = "Manage User Account";
    Layout = "~/Views/Shared/_HomeLayoutPage.cshtml";
    Sem3EProjectOnlineCPFH.Models.Data.AdminPageSearchModelView SearchQuery = ViewBag.AdminPageSearchModelView;


    int totalPages = ViewBag.MaxPage ?? 1;
    int currentPage = ViewBag.CurrentPage ?? 1;
}

<style>
    td, th {
        vertical-align: middle !important;
        white-space: nowrap;
        text-align: left;
    }


    .table-responsive {
        overflow-x: auto;
    }
</style>

<div class="container-fluid">
    <div>
        <h2 class="mt-3">User Management</h2>
        <p>[@ViewBag.TotalUserActive / @ViewBag.TotalUser Active]</p>
    </div>
    <hr />

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (SearchQuery != null)
    {
        <div class="alert alert-success alert-dismissible fade show d-flex flex-row justify-content-between align-items-center p-1" role="alert">
            <div class="d-flex flex-row">
                <div class="p-1">Search String = @SearchQuery.SearchString;</div>
                <div class="p-1">Role = @SearchQuery.Role;</div>
                <div class="p-1">Status = @SearchQuery.Status</div>
            </div>
            <a class="p-2 text-dark" href="/Admin/Index" style="text-decoration: none;">Clear Filter</a>
        </div>
    }

    @if (ViewBag.Users != null && ViewBag.Users.Count >= 1)
    {
        <div class="d-flex flex-row justify-content-between mb-3">
            <a class="btn btn-primary" href="@Url.Action("AddUser", "Admin")">
                <i class="fa-solid fa-user-plus"></i> Add New User
            </a>
            <!-- Dropdown menu for mobile view -->
            <div class="d-block d-md-none">
                <button class="btn btn-outline-primary" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fa-solid fa-filter"></i> Filter
                </button>
                @using (Html.BeginForm("SearchUser", "Admin", FormMethod.Post))
                {
                    <ul class="dropdown-menu p-3">
                        <li class="mb-1">
                            <div class="input-group">
                                <select class="form-select" name="role">
                                    <option value="all" @(SearchQuery != null && SearchQuery.Role == "all" ? "selected" : null)>Select Role</option>
                                    <option value="admin" @(SearchQuery != null && SearchQuery.Role == "admin" ? "selected" : null)>Admin</option>
                                    <option value="hrgroup" @(SearchQuery != null && SearchQuery.Role == "hrgroup" ? "selected" : null)>HR Group</option>
                                    <option value="interviewer" @(SearchQuery != null && SearchQuery.Role == "interviewer" ? "selected" : null)>Interviewer</option>
                                </select>
                            </div>
                        </li>
                        <li class="mb-1">
                            <div class="input-group">
                                <select class="form-select" name="status">
                                    <option value="all" @(SearchQuery != null && SearchQuery.Status == "all" ? "selected" : null)>Select Status</option>
                                    <option value="active" @(SearchQuery != null && SearchQuery.Status == "active" ? "selected" : null)>Active</option>
                                    <option value="disable" @(SearchQuery != null && SearchQuery.Status == "disable" ? "selected" : null)>Disable</option>
                                </select>
                            </div>
                        </li>
                        <li>
                            <div class="input-group">
                                @Html.TextBox("SearchString", SearchQuery != null && SearchQuery.SearchString != null ? SearchQuery.SearchString : "", new { @class = "form-control", placeholder = "Search", aria_label = "Search" })
                                <button type="submit" class="btn btn-outline-primary">
                                    <i class="fa-solid fa-magnifying-glass"></i>
                                </button>
                            </div>
                        </li>
                    </ul>
                }
            </div>
            <!-- Normal view for desktop -->
            @using (Html.BeginForm("SearchUser", "Admin", FormMethod.Post, new { @class = "d-none d-md-flex flex-row gap-4" }))
            {
                <div class="input-group">
                    <select class="form-select" name="role">
                        <option value="all" @(SearchQuery != null && SearchQuery.Role == "all" ? "selected" : null)>Select Role</option>
                        <option value="admin" @(SearchQuery != null && SearchQuery.Role == "admin" ? "selected" : null)>Admin</option>
                        <option value="hrgroup" @(SearchQuery != null && SearchQuery.Role == "hrgroup" ? "selected" : null)>HR Group</option>
                        <option value="interviewer" @(SearchQuery != null && SearchQuery.Role == "interviewer" ? "selected" : null)>Interviewer</option>
                    </select>
                </div>
                <div class="input-group">
                    <select class="form-select" name="status">
                        <option value="all" @(SearchQuery != null && SearchQuery.Status == "all" ? "selected" : null)>Select Status</option>
                        <option value="active" @(SearchQuery != null && SearchQuery.Status == "active" ? "selected" : null)>Active</option>
                        <option value="disable" @(SearchQuery != null && SearchQuery.Status == "disable" ? "selected" : null)>Disable</option>
                    </select>
                </div>
                <div class="input-group">
                    @Html.TextBox("SearchString", SearchQuery != null && SearchQuery.SearchString != null ? SearchQuery.SearchString : "", new { @class = "form-control", placeholder = "Search", aria_label = "Search" })

                </div>
                <button type="submit" class="btn btn-outline-primary">
                    <i class="fa-solid fa-filter"></i>
                </button>
            }
        </div>

        <div class="table-responsive">
            <table class="table table-hover text-center">
                <thead class="">
                    <tr>
                        <th>ID</th>
                        <th>Full Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Role</th>
                        <th>Created At</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="userTable">
                    @foreach (var user in ViewBag.Users)
                    {
                        <tr>
                            <td>@user.Id</td>
                            <td style="text-align: left;">@user.FirstName @user.LastName</td>
                            <td style="text-align: left;">@user.Email</td>
                            <td>@(user.PhoneNumber ?? "N/A")</td>
                            <td>
                                @if (user.Id != ViewBag.UserId)
                                {
                                    using (Html.BeginForm("ChangeRole", "Admin", FormMethod.Post, new { id = $"roleForm-{user.Id}" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="Id" value="@user.Id" />
                                        <select id="roleSelect-@user.Id" name="Role" class="form-select">
                                            <option value="admin" @(user.RoleName == "admin" ? "selected" : null)>Admin</option>
                                            <option value="hrgroup" @(user.RoleName == "hrgroup" ? "selected" : null)>HR Group</option>
                                            <option value="interviewer" @(user.RoleName == "interviewer" ? "selected" : null)>Interviewer</option>
                                        </select>
                                    }
                                }
                                else
                                {
                                    @(user.RoleName.ToUpper())
                                }
                            </td>
                            <td>@user.CreatedAt.ToString("dd/MM/yyyy")</td>
                            <td>
                                <strong class="@(user.isActive? "text-success" : "text-warning")">@(user.isActive ? "Active" : "Disable")</strong>
                            </td>
                            <td>
                                @if (user.Id != ViewBag.UserId)
                                {
                                    <div class="d-flex gap-2 justify-content-start">
                                        <a href="@Url.Action("ProfileSetting", "Account")?id=@user.Id" class="btn btn-outline-primary btn-sm">Profile Setting</a>
                                        @using (Html.BeginForm("DisableUser", "Admin", FormMethod.Post, new { id = $"disableForm-{user.Id}" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="Id" value="@user.Id" />
                                            <button type="button" class="btn btn-outline-warning btn-sm" onclick="confirmDisable('@(user.isActive? "Disable" : "Enable")', '@user.Id')">
                                                @(user.isActive ? "Disable" : "Enable")
                                            </button>
                                        }

                                        @using (Html.BeginForm("DeleteUser", "Admin", FormMethod.Post, new { id = $"deleteForm-{user.Id}" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="Id" value="@user.Id" />
                                            <button type="button" class="btn btn-outline-danger btn-sm" onclick="confirmDelete('@user.Id')">Delete</button>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-outline-primary btn-sm disabled">YOU</button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        if (totalPages > 1)
        {
            <hr />
            <nav class="d-flex justify-content-center">
                <ul class="pagination">
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })">
                            Prev
                        </a>
                    </li>

                    @if (totalPages <= 10)
                    {
                        for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                            </li>
                        }
                    }
                    else
                    {
                        if (currentPage <= 5)
                        {
                            for (int i = 1; i <= 7; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                </li>
                            }
                            <li class="page-item disabled"><a class="page-link">...</a></li>
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = totalPages })">@totalPages</a></li>
                        }
                        else if (currentPage >= totalPages - 4)
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = 1 })">1</a></li>
                            <li class="page-item disabled"><a class="page-link">...</a></li>
                            for (int i = totalPages - 6; i <= totalPages; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = 1 })">1</a></li>
                            <li class="page-item disabled"><a class="page-link">...</a></li>
                            for (int i = currentPage - 2; i <= currentPage + 2; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                </li>
                            }
                            <li class="page-item disabled"><a class="page-link">...</a></li>
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = totalPages })">@totalPages</a></li>
                        }
                    }
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="d-flex flex-column justify-content-center align-items-center">
            <img src="@Url.Content("~/Content/Resources/planet.png")" alt="Not found" />
            <h3 class="p-3" style="font-family: 'Jaro', sans-serif; color: #808080">There is no one here...</h3>
            <a class="animated-button-outline" style="text-decoration: none;" href="@Url.Action("AddUser", "Admin")">
                <svg viewBox="0 0 24 24" class="arr-2">
                    <path d="M16.1716 10.9999L10.8076 5.63589L12.2218 4.22168L20 11.9999L12.2218 19.778L10.8076 18.3638L16.1716 12.9999H4V10.9999H16.1716Z"></path>
                </svg>
                <span class="text">Add New User</span>
                <span class="circle"></span>
                <svg viewBox="0 0 24 24" class="arr-1">
                    <path d="M16.1716 10.9999L10.8076 5.63589L12.2218 4.22168L20 11.9999L12.2218 19.778L10.8076 18.3638L16.1716 12.9999H4V10.9999H16.1716Z"></path>
                </svg>
            </a>
        </div>
    }
</div>

<script>
    document.querySelectorAll("form").forEach(form => {
        form.addEventListener("submit", function () {
            showLoading();
        });
    });
</script>

<script>
    function confirmDelete(id) {
        showAlert("Warning", ["Are you sure you want to delete this user?", "This action will not be reversed.", `UID: ${id}`], "Confirm", () => {
            document.getElementById(`deleteForm-${id}`).submit();
        });
    }
</script>
<script>
    function confirmDisable(action, id) {
        showAlert("Warning", [`Are you sure you want to ${action} this user?`, `UID: ${id}`], "Confirm", () => {
            document.getElementById(`disableForm-${id}`).submit();
        });
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll("select[name='Role']").forEach(select => {
            select.addEventListener("change", function () {
                const userId = this.id.replace("roleSelect-", ""); // Lấy userId từ ID
                const selected = this.value;
                showAlert("Warning", [`Are you sure you want to change this user's role?`, `UID: ${userId}`, `To Role: [${selected}]`], "Confirm", () => {
                    document.getElementById("roleForm-" + userId).submit();
                });
            });
        });
    });
</script>

@{
    SearchQuery = null;
}
