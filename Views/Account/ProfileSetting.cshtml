@model Sem3EProjectOnlineCPFH.Models.Auth.ProfileSettingsViewModel

@{
    ViewBag.Title = "Profile Settings";
    Layout = "~/Views/Shared/_HomeLayoutPage.cshtml";
    var id = Request.QueryString["id"];
}

@if (Model == null)
{
    <p class="text-danger">Error: Profile data not found.</p>
}
else
{
    <style>
        #setting-input-avatar-label {
            opacity: 0;
            background-color: rgba(0, 0, 0, 0.5);
            color: white;
            transition: background-color 0.3s;
            border-radius: 50%;
        }

            #setting-input-avatar-label:hover {
                opacity: 1;
            }

        .active {
            background-color: transparent !important;
            color: #007bff !important;
            border-left: 3px solid #007bff !important;
        }

        .border-radius-0 {
            border-radius: 0 !important;
        }

        .sticky-sidebar {
            position: sticky;
            top: 20px;
            display: inline-block;
            max-height: 90vh;
            overflow-y: auto;
        }
    </style>

    <div class="container mt-5">
        <h2 class="mb-4">Profile Settings</h2>
        <hr />
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row">
            <!-- Left Navigation -->
            <div class="col-md-3 sticky-sidebar">
                <div class="list-group bg-white">
                    <a href="#" class="list-group-item border-0 border-radius-0 list-group-item-action active" id="btnProfile" onclick="showSection('profileSection')">Profile Info</a>
                    <a href="#" class="list-group-item border-0 border-radius-0 list-group-item-action" id="btnPassword" onclick="showSection('passwordSection')">Change Password</a>
                    @if (id == null)
                    {
                        using (Html.BeginForm("Logout", "Account", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to Logout your account? This action cannot be undone.')", @class = "mt-3" }))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="list-group-item list-group-item-action list-group-item-danger">Logout Account</button>
                        }
                    }
                </div>
            </div>

            <!-- Profile Form Section -->
            <div class="col-md-6">
                <div id="profileSection">
                    @using (Html.BeginForm("UpdateProfile", "Account", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.ProfileUpdate.Id)

                        <!-- Personal Info -->
                        <h5>Personal Information</h5>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.ProfileUpdate.FirstName, "First Name", new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.ProfileUpdate.FirstName, new { @class = "form-control", autocomplete = "given-name" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ProfileUpdate.LastName, "Last Name", new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.ProfileUpdate.LastName, new { @class = "form-control", autocomplete = "family-name" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ProfileUpdate.Email, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.ProfileUpdate.Email, new { @class = "form-control", type = "email", autocomplete = "email", @readonly = "true" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ProfileUpdate.PhoneNumber, "Phone Number", new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.ProfileUpdate.PhoneNumber, new { @class = "form-control", type = "tel", autocomplete = "tel" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ProfileUpdate.Bio, new { @class = "form-label" })
                            @Html.TextAreaFor(model => model.ProfileUpdate.Bio, new { @class = "form-control", rows = "3", placeholder = "Tell us something about yourself..." })
                        </div>

                        <hr>

                        <!-- Social Accounts -->
                        <h5>Social Accounts</h5>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.ProfileUpdate.SocialAccount1, "Social Account 1", new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.ProfileUpdate.SocialAccount1, new { @class = "form-control", placeholder = "Enter your LinkedIn, GitHub, etc." })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ProfileUpdate.SocialAccount2, "Social Account 2", new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.ProfileUpdate.SocialAccount2, new { @class = "form-control" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ProfileUpdate.SocialAccount3, "Social Account 3", new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.ProfileUpdate.SocialAccount3, new { @class = "form-control" })
                        </div>

                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    }
                </div>

                <!-- Change Password Section (Hidden by Default) -->
                <div id="passwordSection" style="display: none;">
                    <h4>Change Password</h4>
                    @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.ChangePassword.Id)

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ChangePassword.OldPassword, "Old Password", new { @class = "form-label" })
                            @Html.PasswordFor(model => model.ChangePassword.OldPassword, new { @class = "form-control", placeholder = "Current password" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ChangePassword.NewPassword, "New Password", new { @class = "form-label" })
                            @Html.PasswordFor(model => model.ChangePassword.NewPassword, new { @class = "form-control", placeholder = "New password" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ChangePassword.ConfirmPassword, "Confirm Password", new { @class = "form-label" })
                            @Html.PasswordFor(model => model.ChangePassword.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm new password" })
                        </div>

                        <button type="submit" class="btn btn-danger">Change Password</button>
                    }
                </div>
            </div>

            <!-- Avatar Section -->
            <div class="col-md-3 d-flex align-items-center flex-column position-relative">
                <h4 class="w-100">Avatar</h4>
                <div class="d-flex align-items-center position-relative">
                    <img id="avatarPreview" src="@Url.Content(Model.ProfileUpdate.AvatarUrl ?? "~/Content/Resources/DefaultImg.png")"
                         alt="Profile Avatar"
                         class="img-thumbnail rounded-circle"
                         style="width: 150px; height: 150px; cursor: pointer;">
                    <label for="setting-input-avatar" id="setting-input-avatar-label" class="position-absolute top-0 d-flex justify-content-center align-items-center flex-column" style="width: 150px; aspect-ratio: 1/1; font-size: 30px; cursor: pointer;">
                        <i class="fa-solid fa-camera"></i>
                        <p style="font-size: 12px;">Upload New Avatar</p>
                    </label>
                </div>

                <input type="file" name="avatar" id="setting-input-avatar" class="d-none" accept="image/png, image/jpeg">

                <div id="previewModal" class="modal fade" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Preview Avatar</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body text-center">
                                <img id="previewImage" src="" class="img-thumbnail" style="max-width: 100%; height: auto;">
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button id="confirmUploadBtn" type="button" class="btn btn-primary">Confirm Upload</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    //avatar upload form
    <form id="uploadForm" action="@Url.Action("UploadAvatar", "Account")" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <input type="text" name="Id" value="@Model.ProfileUpdate.Id" hidden>  
        <input type="file" name="avatar" id="uploadFileInput" class="d-none">
    </form>


    <br />
    <br />
    <br />
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const avatarPreview = document.getElementById("avatarPreview");
        const fileInput = document.getElementById("setting-input-avatar");
        const previewImage = document.getElementById("previewImage");
        const confirmUploadBtn = document.getElementById("confirmUploadBtn");
        const uploadForm = document.getElementById("uploadForm");
        const uploadFileInput = document.getElementById("uploadFileInput");


        fileInput.addEventListener("change", function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    previewImage.src = e.target.result;
                    new bootstrap.Modal(document.getElementById('previewModal')).show();
                };
                reader.readAsDataURL(file);
            }
        });

        confirmUploadBtn.addEventListener("click", function () {
            uploadFileInput.files = fileInput.files;
            uploadForm.submit();
        });
    });
</script>

<script>
    function showSection(sectionId) {
        document.getElementById("profileSection").style.display = "none";
        document.getElementById("passwordSection").style.display = "none";
        document.getElementById(sectionId).style.display = "block";
        document.getElementById("btnProfile").classList.toggle("active", sectionId === "profileSection");
        document.getElementById("btnPassword").classList.toggle("active", sectionId === "passwordSection");
    }
</script>